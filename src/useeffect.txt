Hooks:
     -	Hooks are the functions which "hook into" React state and lifecycle features from        
            function  components	.
    -	React offers a number of built-in Hooks. A few of these include  useState(),    
         useEffect(),  useContext(), useReducer(),    and useRef() 

Rules:
    -   Never call Hooks from inside a loop, condition or nested function
    -   Hooks should sit at the top-level of your component
    -   Only call Hooks from React functional components
    -   Never call a Hook from a regular function
    -   Hooks can call other Hooks

useEffect:
    -   useEffect accepts a function which can perform any side effects.
    -   The React hook useEffect helps in adding componentDidUpdate 
        and componentDidMount combined lifecycle in React's functional component
syntax:
    useEffect(effectFunction, arrayDependencies)